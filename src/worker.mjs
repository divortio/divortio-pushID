/**
 * @fileoverview The main entry point for the Cloudflare Worker.
 * @version 1.2.0
 *
 * This worker acts as a simple pass-through. It forwards every incoming
 * request to a single, global instance of the SessionManagerDO.
 *
 * This architecture serializes all session processing across all users
 * through one single-threaded Durable Object instance.
 */

export default {
    /**
     * Handles incoming HTTP requests by forwarding them to a single, global Durable Object.
     *
     * @param {Request} request - The incoming request object.
     * @param {object} env - The environment object containing bindings, like SESSION_MANAGER_DO.
     * @param {object} ctx - The execution context.
     * @returns {Promise<Response>} The response generated by the Durable Object.
     */
    async fetch(request, env, ctx) {
        // We need a constant, hardcoded name to ensure we always get the same
        // single instance of our Durable Object.
        const SINGLETON_OBJECT_NAME = "SESSION_MANAGER_SINGLETON";

        // Get the Durable Object ID from our constant name.
        const durableObjectId = env.SESSION_MANAGER_DO.idFromName(SINGLETON_OBJECT_NAME);

        // Get the Durable Object stub using the static ID.
        const durableObjectStub = env.SESSION_MANAGER_DO.get(durableObjectId);

        // Forward the request to the singleton Durable Object and return its response.
        return durableObjectStub.fetch(request);
    },
};